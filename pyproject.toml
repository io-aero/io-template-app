[build-system]
requires = [
    "setuptools>=61.0",
]
build-backend = "setuptools.build_meta"

[project]
authors = [
    { name = "Team IO-Aero", email = "info@io-aero.com" },
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Intended Audience :: Science/Research",
    "License :: Other/Proprietary License",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering",
    "Typing :: Typed",
]
dependencies = [
    "dynaconf",
    "iocommon",
    "iotemplatelib",
    "PyYAML",
    "tomli",
    "tomli-w",
]
description = "Template for an Application Repository"
keywords = [
    "application",
]
maintainers = [
    { name = "Team IO-Aero", email = "info@io-aero.ch" },
]
name = "iotemplateapp"
readme = "README.md"
requires-python = ">=3.10"
version = "1.4.1"

[project.urls]
"Bug Tracker" = "https://github.com/io-aero/io-template-app/issues"
Documentation = "https://io-aero.github.io/io-template-app/"
Homepage = "https://github.com/io-aero/io-template-app"
"Release History" = "https://io-aero.github.io/io-template-app/release_history/"
"Release Notes" = "https://io-aero.github.io/io-template-app/release_notes/"
Source = "https://github.com/io-aero/io-template-app/tree/main/iotemplateapp"

[tool.bandit]

[tool.docformatter]
black = true
blank = true
recursive = true
wrap-descriptions = 100
wrap-summaries = 100

[tool.pytest.ini_options]
console_output_style = "count"
markers = [
    "issue",
]
norecursedirs = "./tests/helpers"
pythonpath = "./iotemplateapp/"
testpaths = "./tests/"

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".git",
    ".history",
    ".idea",
    ".mypy_cache",
    ".pytest_cache",
    ".vscode",
    "build",
    "iotemplateapp.egg-info",
]

# Same as Black.
line-length = 100
indent-width = 4

# Assume Python 3.12
target-version = "py312"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["ALL"]
ignore = [
    "C408",
    "D211",
    "D213",
    "PLW0603",
    "S101",
    "S603",
]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

[tool.setuptools]
packages = [
    "iotemplateapp",
]

[tool.setuptools.package-data]
iotemplateapp = [
    "*.pyi",
    "py.typed",
]

[tool.vulture]
make_whitelist = true
min_confidence = 100
